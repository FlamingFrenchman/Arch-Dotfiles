# a very sweaty nerd's i3 config file
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

# Keybinds used in default mode:
# sup+h,j,k,l               focus left/down/up/right container 
# sup+Shift+h,j,k,l         move focused container
# sup+0..9,syms             goto workspace
# sup+Shift+0..9,syms       move focused container to workspace
# sup+Tab                   goto last viewed workspace
# sup+Shift+Tab             move focused container to last viewed workspace
# sup+n                     goto next nonempty workspace
# sup+Shift+n               goto previous nonempty workspace
# sup+mouse                 move a floating window
# sup+Space                 focus tiling/floating
# sup+Shift+Space           toggle tiling/floating
# sup+Shift+c,r,q,z         reload, restart, quit, and quit harder
# sup+p                     audio player next song
# sup+Shift+p               audio player previous song
# sup+m                     toggle audio mute
# sup+Shift+m               play/pause audio player
# sup+a,w,t                 change mode
# sup+q                     kill focused container
# sup+r                     run (rofi/dmenu)
# sup+s                     horizontal split mode
# sup+v                     vertical split mode
# sup+f                     toggle container fullscreen
# sup+Return                open terminal emulator
#
# The previous/next bindings break convention of shift+alphanum sending container
# to workspace because 1. I never really need to do that, 2. Vi uses n/N as
# next/previous search match and, 3. It frees up p for other things
#
# As a rule of thumb I try to use shorthands (n for next, b for browser,
# m for mute, etc.) when mapping keys so that they make sense regardless 
# of layout.
#
# Current modes are:
# - Application ($sup+a): for launching things I commonly use, like firefox,
#   Thunar, VirtualBox, the terminal, etc. This mode should be exited after
#   launching a command, so it'll work kinda like a prefix.
# - Window ($sup+w): for editing the layout of containers
# - Tweak ($sup+t): for changing basic settings (volume, brightness,
#   redshift, etc.)

# Windows/Command/Super
set $sup Mod4
# Alt/Meta, currently not used
set $mod Mod1

# Startup programs
exec --no-startup-id wal -i ~/.config/wal/images/bork_referendum.jpg -o ~/.bin/theme_update.sh

# scripts and programs
set $workspace_change ~/.bin/workspace_change.sh
set $volume_change ~/.bin/volume_change.sh
set $brightness_change ~/.bin/brightness_change.sh
set $terminal st
set $browser firefox
set $filemanager Thunar
set $monitor conky
set $batterycheck ~/.bin/battery_check.sh

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# Creates the gaps between windows
gaps inner 30

# Set the border type. Default is normal. Pixel eliminates the tile bars; none
# does... something. Normal and pixel types support an option "pixel" to
# specify border with
default_border none
default_floating_border none

# Font for window titles. Will also be used by the bar unless a different font is used in the bar {} block.
#font pango:Hack 15

# media key volume control
bindsym XF86AudioMute exec $volume_change toggle
bindsym XF86AudioRaiseVolume exec $volume_change up
bindsym XF86AudioLowerVolume exec $volume_change down

# media key brightness control
bindsym XF86MonBrightnessUp exec $brightness_change lighten 5
bindsym XF86MonBrightnessDown exec $brightness_change darken 5

# media key audio player control
# dumb bindings because some hardware may only have one play/pause button
bindsym XF86AudioPause exec "playerctl play-pause && sleep 0.1 && notify-send -t 3000 -u normal $(playerctl status)"
bindsym XF86AudioPlay exec "playerctl play-pause && sleep 0.1 && notify-send -t 3000 -u normal $(playerctl status)"
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous

# change focus
bindsym $sup+h focus left
bindsym $sup+j focus down
bindsym $sup+k focus up
bindsym $sup+l focus right

# move focused window
bindsym $sup+Shift+h move left
bindsym $sup+Shift+j move down
bindsym $sup+Shift+k move up
bindsym $sup+Shift+l move right

# switch to (n)ext/prev workspace with content in them
bindsym $sup+n exec $workspace_change next_on_output
bindsym $sup+shift+n exec $workspace_change prev_on_output

# switch to last viewed workspace
bindsym $sup+Tab exec $workspace_change back_and_forth

# switch to workspace
bindsym $sup+1 exec $workspace_change $ws1
bindsym $sup+2 exec $workspace_change $ws2
bindsym $sup+3 exec $workspace_change $ws3
bindsym $sup+4 exec $workspace_change $ws4
bindsym $sup+5 exec $workspace_change $ws5
bindsym $sup+6 exec $workspace_change $ws6
bindsym $sup+7 exec $workspace_change $ws7
bindsym $sup+8 exec $workspace_change $ws8
bindsym $sup+9 exec $workspace_change $ws9
bindsym $sup+0 exec $workspace_change $ws10

# make switching workspaces less awful on programmer dvorak
# order from 0 to 9 is: *()}+{][!=
bindsym $sup+parenleft      exec $workspace_change $ws1
bindsym $sup+parenright     exec $workspace_change $ws2
bindsym $sup+braceright     exec $workspace_change $ws3
bindsym $sup+plus           exec $workspace_change $ws4
bindsym $sup+braceleft      exec $workspace_change $ws5
bindsym $sup+bracketright   exec $workspace_change $ws6
bindsym $sup+bracketleft    exec $workspace_change $ws7
bindsym $sup+exclam         exec $workspace_change $ws8
bindsym $sup+equal          exec $workspace_change $ws9
bindsym $sup+asterisk       exec $workspace_change $ws10

# move focused container to last viewed workspace
bindsym $sup+Shift+Tab move container to workspace back_and_forth
                            
# move focused container to workspace
bindsym $sup+Shift+1 move container to workspace $ws1
bindsym $sup+Shift+2 move container to workspace $ws2
bindsym $sup+Shift+3 move container to workspace $ws3
bindsym $sup+Shift+4 move container to workspace $ws4
bindsym $sup+Shift+5 move container to workspace $ws5
bindsym $sup+Shift+6 move container to workspace $ws6
bindsym $sup+Shift+7 move container to workspace $ws7
bindsym $sup+Shift+8 move container to workspace $ws8
bindsym $sup+Shift+9 move container to workspace $ws9
bindsym $sup+Shift+0 move container to workspace $ws10

# make moving workspaces less awful on programmer dvorak
# order from 0 to 9 is: *()}+{][!=
bindsym $sup+Shift+parenleft    move container to workspace $ws1
bindsym $sup+Shift+parenright   move container to workspace $ws2
bindsym $sup+Shift+braceright   move container to workspace $ws3
bindsym $sup+Shift+plus         move container to workspace $ws4
bindsym $sup+Shift+braceleft    move container to workspace $ws5
bindsym $sup+Shift+bracketright move container to workspace $ws6
bindsym $sup+Shift+bracketleft  move container to workspace $ws7
bindsym $sup+Shift+exclam       move container to workspace $ws8
bindsym $sup+Shift+equal        move container to workspace $ws9
bindsym $sup+Shift+asterisk     move container to workspace $ws10

# (s)plit in horizontal orientation
bindsym $sup+s "exec i3-msg split v && notify-send -t 500 -u normal 'Horizontal Split'"

# split in (v)ertical orientation
bindsym $sup+v "exec i3-msg split h && notify-send -t 500 -u normal 'Vertical Split'"

# enter (f)ullscreen mode for the focused container
bindsym $sup+f fullscreen toggle

# start a terminal
bindsym $sup+Return exec $terminal

# use mouse+$sup to drag floating windows to their wanted position
floating_modifier $sup

# toggle tiling/floating
bindsym $sup+Shift+space floating toggle

# change focus between tiling/floating windows
bindsym $sup+space focus mode_toggle

# (q)uit focused window
bindsym $sup+q kill

# start rofi (a program launcher/(r)unner)
bindsym $sup+r exec "rofi -show run"

# toggle the visibility of guake, a drop-down terminal
bindsym $sup+g exec "guake-toggle"

# print (b)attery charge
bindsym $sup+b exec $batterycheck

# screen (c)apture
bindsym $sup+c exec "maim -s $(xdg-user-dir PICTURES)Screenshots/Screenshot\ $(date +%s).png"

# audio controls
# also playerctl is slow so sleep is needed to ensure correct notification status

# toggle (m)ute
bindsym $sup+m exec $volume_change toggle
# start/stop player
bindsym $sup+Shift+m exec "playerctl play-pause && sleep 0.1 && notify-send -t 3000 -u normal $(playerctl status)"
# (p)layer next song
bindsym $sup+p exec playerctl next
# (p)layer (p)revious song
bindsym $sup+Shift+p exec playerctl previous

# container/manager controls

# reload the (c)onfiguration file
bindsym $sup+Shift+c reload
# (r)estart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $sup+Shift+r restart
# (q)uit i3 (logs you out of your X session)
bindsym $sup+Shift+q exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"
# really exit i3
bindsym $sup+Shift+z exec "i3-msg exit"

# modes
bindsym $sup+a exec "i3-msg mode application && notify-send -t 3000 -u normal 'Application mode'"
mode "application" {
    bindsym b exec $browser
    bindsym m exec $monitor
    bindsym f exec $filemanager
    bindsym Return exec $terminal
    bindsym Escape exec "i3-msg mode default && notify-send -t 3000 -u normal 'Default mode'"
    bindsym q exec "i3-msg mode default && notify-send -t 3000 -u normal 'Default mode'"
}

bindsym $sup+t exec "i3-msg mode tweak && notify-send -t 3000 -u normal 'Tweak mode'"
mode "tweak" {
    bindsym m exec $volume_change toggle
    bindsym c exec $volume_change cycle
    bindsym u exec $volume_change up
    bindsym d exec $volume_change down
    bindsym b exec $brightness_change bluen 100
    bindsym r exec $brightness_change redden 100
    bindsym n exec $brightness_change darken 5
    bindsym l exec $brightness_change lighten 5
    bindsym Escape exec "i3-msg mode default && notify-send -t 3000 -u normal 'Default mode'"
    bindsym q exec "i3-msg mode default && notify-send -t 3000 -u normal 'Default mode'"
}

bindsym $sup+w exec "i3-msg mode window && notify-send -t 3000 -u normal 'Window mode'"
mode "window" {
    bindsym h focus left
    bindsym j focus down
    bindsym k focus up
    bindsym l focus right
    bindsym Shift+h move left
    bindsym Shift+j move down
    bindsym Shift+k move up
    bindsym Shift+l move right
    bindsym y resize shrink width 1 px or 1 ppt
    bindsym u resize grow height 1 px or 1 ppt
    bindsym i resize shrink height 1 px or 1 ppt
    bindsym o resize grow width 1 px or 1 ppt
    bindsym Shift+y resize shrink width 10 px or 10 ppt
    bindsym Shift+u resize grow height 10 px or 10 ppt
    bindsym Shift+i resize shrink height 10 px or 10 ppt
    bindsym Shift+o resize grow width 10 px or 10 ppt
    bindsym t workspace_layout tabbed
    bindsym z workspace_layout stacking
    bindsym d workspace_layout default
    bindsym p focus parent
    bindsym c focus child
    bindsym s split h
    bindsym v split v
    bindsym Escape exec "i3-msg mode default && notify-send -t 3000 -u normal 'Default mode'"
    bindsym q exec "i3-msg mode default && notify-send -t 3000 -u normal 'Default mode'"
}

# class        border  backgr. text    indic   child_border
client.focused #ffc9fa #ffc9fa #000000 #2e9ef4 #ffc9fa
